#!/usr/bin/python3
"""
Unit tests for the add_integer function.
"""

import unittest
from add_integer import add_integer

class TestAddInteger(unittest.TestCase):
    """Test cases for the add_integer function."""

    def test_integers(self):
        """Test that the function correctly adds two integers."""
        self.assertEqual(add_integer(1, 2), 3)
        self.assertEqual(add_integer(-1, 5), 4)
        self.assertEqual(add_integer(0, 0), 0)

    def test_floats(self):
        """Test that the function correctly adds two floats after casting."""
        self.assertEqual(add_integer(1.5, 2.4), 3)
        self.assertEqual(add_integer(-1.9, 5.1), 3)
        self.assertEqual(add_integer(0.9, 0.1), 0)

    def test_mixed_types(self):
        """Test that the function correctly adds a mix of integers and floats."""
        self.assertEqual(add_integer(1, 2.8), 3)
        self.assertEqual(add_integer(1.9, 2), 3)
        self.assertEqual(add_integer(-1.2, 5), 4)

    def test_default_b(self):
        """Test that the function correctly uses the default value for b."""
        self.assertEqual(add_integer(1), 99)
        self.assertEqual(add_integer(1.9), 99)

    def test_errors(self):
        """Test that the function raises a TypeError for invalid inputs."""
        with self.assertRaises(TypeError):
            add_integer(None, 2)
        with self.assertRaises(TypeError):
            add_integer(1, "2")
        with self.assertRaises(TypeError):
            add_integer("1", 2)
        with self.assertRaises(TypeError):
            add_integer(1.5, [2])

if __name__ == "__main__":
    unittest.main()
